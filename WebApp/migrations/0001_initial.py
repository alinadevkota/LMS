# Generated by Django 2.2.2 on 2019-07-16 08:39

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='BoardInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('board_name', models.CharField(blank=True, max_length=500, null=True)),
                ('board_write_level', models.CharField(blank=True, max_length=2, null=True)),
                ('board_read_level', models.CharField(blank=True, max_length=2, null=True)),
                ('board_reply_level', models.CharField(blank=True, max_length=2, null=True)),
                ('board_new_time', models.IntegerField(blank=True, null=True)),
                ('board_create_time', models.CharField(blank=True, max_length=16, null=True)),
                ('admin_id', models.CharField(blank=True, max_length=20, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='CenterInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Center_Name', models.CharField(blank=True, max_length=500, null=True)),
                ('Center_Address', models.CharField(blank=True, max_length=500, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='ChapterContentsInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('Content_Description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='ChapterInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Chapter_No', models.IntegerField(blank=True, null=True)),
                ('Chapter_Name', models.CharField(blank=True, max_length=200, null=True)),
                ('Summary', models.TextField(blank=True, null=True)),
                ('Page_Num', models.IntegerField(blank=True, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='ChapterMissonCheckCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_card_code', models.IntegerField(unique=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('chapter_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='chaptermissoncheckcards', to='WebApp.ChapterInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='HomeworkInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Homework_Topic', models.CharField(blank=True, max_length=500, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('Chapter_Code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='homeworkinfos', to='WebApp.ChapterInfo')),
            ],
        ),
        migrations.CreateModel(
            name='InningInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Inning_Name', models.CharField(blank=True, max_length=500, null=True)),
                ('Start_Date', models.DateTimeField()),
                ('End_Date', models.DateTimeField()),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('Center_Code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='inninginfos', to='WebApp.CenterInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='LectureInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Lecture_Name', models.CharField(blank=True, max_length=500, null=True)),
                ('Lecture_Description', models.TextField(blank=True, null=True)),
                ('Lecture_Cover_File', models.ImageField(blank=True, null=True, upload_to='Lecture_images/')),
                ('Lecture_Level', models.IntegerField(blank=True, null=True)),
                ('Lecture_Info', models.TextField(blank=True, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('Lecture_Provider', models.CharField(blank=True, max_length=250, null=True)),
                ('Center_Code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lectureinfos', to='WebApp.CenterInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='LessonInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_code', models.IntegerField(blank=True, null=True)),
                ('start_date', models.CharField(blank=True, max_length=150, null=True)),
                ('end_date', models.CharField(blank=True, max_length=150, null=True)),
                ('progress', models.CharField(blank=True, max_length=150, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('ubt_start', models.CharField(blank=True, max_length=50, null=True)),
                ('ubt_end', models.CharField(blank=True, max_length=50, null=True)),
                ('download_count', models.IntegerField(blank=True, null=True)),
                ('download_date', models.CharField(blank=True, max_length=19, null=True)),
                ('center_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lessoninfos', to='WebApp.CenterInfo')),
                ('inning_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lessoninfos', to='WebApp.InningInfo')),
                ('lecture_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lessoninfos', to='WebApp.LectureInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='OmrQuestionInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('Question_Level', models.IntegerField(blank=True, null=True)),
                ('Question_Score', models.IntegerField(blank=True, null=True)),
                ('Question_Description', models.TextField(blank=True, null=True)),
                ('Homework_Code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='omrquestioninfos', to='WebApp.HomeworkInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='MemberInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('Member_ID', models.CharField(blank=True, max_length=250, null=True)),
                ('Member_Permanent_Address', models.CharField(blank=True, max_length=500, null=True)),
                ('Member_Temporary_Address', models.CharField(blank=True, max_length=500, null=True)),
                ('Member_BirthDate', models.DateTimeField(blank=True, null=True)),
                ('Member_Phone', models.CharField(blank=True, max_length=150, null=True)),
                ('Member_Gender', models.CharField(blank=True, max_length=150, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Member_Memo', models.CharField(blank=True, max_length=500, null=True)),
                ('Member_Avatar', models.ImageField(blank=True, null=True, upload_to='Member_images/')),
                ('Is_Teacher', models.BooleanField(default=False)),
                ('Is_Student', models.BooleanField(default=False)),
                ('Is_CenterAdmin', models.BooleanField(default=False)),
                ('Is_Parent', models.BooleanField(default=False)),
                ('Center_Code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='memberinfos', to='WebApp.CenterInfo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ('-pk',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TodoTInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('todo_code', models.IntegerField(blank=True, null=True)),
                ('todo_t_flag', models.CharField(blank=True, max_length=10, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('member_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='todotinfos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='TodoInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('todo_comment', models.CharField(blank=True, max_length=4000, null=True)),
                ('todo_status', models.CharField(blank=True, max_length=1, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('teacher_code', models.IntegerField(blank=True, null=True)),
                ('todo_title', models.CharField(blank=True, max_length=500, null=True)),
                ('start_date', models.CharField(blank=True, max_length=50, null=True)),
                ('start_time', models.CharField(blank=True, max_length=50, null=True)),
                ('end_date', models.CharField(blank=True, max_length=50, null=True)),
                ('end_time', models.CharField(blank=True, max_length=50, null=True)),
                ('chapter_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='todoinfos', to='WebApp.ChapterInfo')),
                ('lecture_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='todoinfos', to='WebApp.LectureInfo')),
                ('member_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='todoinfos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='TalkRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('talk_room_cate_code', models.CharField(max_length=10)),
                ('use_flag', models.BooleanField(blank=True, null=True)),
                ('inning_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='talkrooms', to='WebApp.InningInfo')),
                ('lecture_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='talkrooms', to='WebApp.LectureInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='TalkMessageRead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_read', models.BooleanField()),
                ('member_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='talkmessagereads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='TalkMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(blank=True, max_length=5000, null=True)),
                ('sender_member_code', models.IntegerField(blank=True, null=True)),
                ('send_date', models.CharField(blank=True, max_length=10, null=True)),
                ('send_time', models.CharField(blank=True, max_length=8, null=True)),
                ('talk_room_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='talkmessages', to='WebApp.TalkRoom')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='TalkMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use_flag', models.BooleanField(blank=True, null=True)),
                ('member_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='talkmembers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='ScheduleInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('content', models.CharField(blank=True, max_length=2000, null=True)),
                ('start_date', models.CharField(blank=True, max_length=10, null=True)),
                ('start_time', models.CharField(blank=True, max_length=8, null=True)),
                ('end_date', models.CharField(blank=True, max_length=10, null=True)),
                ('end_time', models.CharField(blank=True, max_length=8, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('member_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='scheduleinfos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='QuizInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_code', models.IntegerField(blank=True, null=True)),
                ('quiz_type', models.CharField(blank=True, max_length=50, null=True)),
                ('quiz_question', models.CharField(blank=True, max_length=1000, null=True)),
                ('quiz_media_type', models.CharField(blank=True, max_length=10, null=True)),
                ('quiz_media_file', models.CharField(blank=True, max_length=200, null=True)),
                ('quiz_score', models.IntegerField(blank=True, null=True)),
                ('quiz_comment', models.CharField(blank=True, max_length=1000, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('quiz_head', models.CharField(blank=True, max_length=1000, null=True)),
                ('quiz_media_file2', models.CharField(blank=True, max_length=250, null=True)),
                ('chapter_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='quizinfos', to='WebApp.ChapterInfo')),
                ('lecture_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='quizinfos', to='WebApp.LectureInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='QuizExampleInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quiz_example', models.CharField(blank=True, max_length=1000, null=True)),
                ('quiz_example_correct', models.CharField(blank=True, max_length=10, null=True)),
                ('quiz_example_idx', models.IntegerField(blank=True, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('quiz_example_type', models.CharField(blank=True, max_length=50, null=True)),
                ('quiz_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='quizexampleinfos', to='WebApp.QuizInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='QuizAnswerInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_code', models.IntegerField(blank=True, null=True)),
                ('quiz_type', models.CharField(blank=True, max_length=50, null=True)),
                ('quiz_answer', models.IntegerField(blank=True, null=True)),
                ('quiz_answer_idx', models.IntegerField(blank=True, null=True)),
                ('quiz_correct', models.CharField(blank=True, max_length=50, null=True)),
                ('quiz_score', models.IntegerField(blank=True, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('test_type', models.IntegerField(blank=True, null=True)),
                ('chapter_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='quizanswerinfos', to='WebApp.ChapterInfo')),
                ('lecture_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='quizanswerinfos', to='WebApp.LectureInfo')),
                ('member_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='quizanswerinfos', to=settings.AUTH_USER_MODEL)),
                ('quiz_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='quizanswerinfos', to='WebApp.QuizInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='QuestionInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_code', models.IntegerField(blank=True, null=True)),
                ('question_type', models.CharField(blank=True, max_length=10, null=True)),
                ('question', models.CharField(blank=True, max_length=4000, null=True)),
                ('question_media_type', models.CharField(blank=True, max_length=10, null=True)),
                ('question_media_file', models.CharField(blank=True, max_length=200, null=True)),
                ('question_score', models.IntegerField(blank=True, null=True)),
                ('question_head', models.CharField(blank=True, max_length=2000, null=True)),
                ('question_essay', models.CharField(blank=True, max_length=500, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('question_media_file2', models.CharField(blank=True, max_length=250, null=True)),
                ('question_comment', models.TextField(blank=True, null=True)),
                ('question_level', models.IntegerField(blank=True, null=True)),
                ('teacher_contents', models.CharField(blank=True, max_length=500, null=True)),
                ('student_contents', models.CharField(blank=True, max_length=500, null=True)),
                ('chapter_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='questioninfos', to='WebApp.ChapterInfo')),
                ('lecture_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='questioninfos', to='WebApp.LectureInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='QExampleInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('q_example', models.CharField(blank=True, max_length=1000, null=True)),
                ('q_example_correct', models.CharField(blank=True, max_length=10, null=True)),
                ('q_example_idx', models.IntegerField(blank=True, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('q_example_type', models.CharField(blank=True, max_length=50, null=True)),
                ('question_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='qexampleinfos', to='WebApp.OmrQuestionInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='QAnswerLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_answer', models.CharField(blank=True, max_length=250, null=True)),
                ('question_idx', models.CharField(blank=True, max_length=250, null=True)),
                ('question_score', models.IntegerField(blank=True, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('lecture_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='qanswerlogs', to='WebApp.LectureInfo')),
                ('member_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='qanswerlogs', to=settings.AUTH_USER_MODEL)),
                ('question_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='qanswerlogs', to='WebApp.OmrQuestionInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='QAnswerInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_code', models.IntegerField(blank=True, null=True)),
                ('question_type', models.CharField(blank=True, max_length=10, null=True)),
                ('question_answer', models.CharField(blank=True, max_length=200, null=True)),
                ('question_idx', models.IntegerField(blank=True, null=True)),
                ('question_correct', models.CharField(blank=True, max_length=200, null=True)),
                ('question_score', models.IntegerField(blank=True, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('chapter_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='qanswerinfos', to='WebApp.ChapterInfo')),
                ('lecture_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='qanswerinfos', to='WebApp.LectureInfo')),
                ('lesson_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='qanswerinfos', to='WebApp.LessonInfo')),
                ('member_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='qanswerinfos', to=settings.AUTH_USER_MODEL)),
                ('question_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='qanswerinfos', to='WebApp.OmrQuestionInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='OmrExampleInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('omr_example_correct', models.CharField(blank=True, max_length=1, null=True)),
                ('omr_example_idx', models.IntegerField(blank=True, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('question_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='omrexampleinfos', to='WebApp.OmrQuestionInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='OmrAssignInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_code', models.IntegerField(blank=True, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('chapter_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='omrassigninfos', to='WebApp.ChapterInfo')),
                ('lecture_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='omrassigninfos', to='WebApp.LectureInfo')),
                ('member_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='omrassigninfos', to=settings.AUTH_USER_MODEL)),
                ('question_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='omrassigninfos', to='WebApp.OmrQuestionInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='OmrAnswerInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Answer_Description', models.TextField(blank=True, null=True)),
                ('Answer_Score', models.IntegerField(blank=True, null=True)),
                ('Question_Code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='omranswerinfos', to='WebApp.OmrQuestionInfo')),
                ('Student_Code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='omranswerinfos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='MessageInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_code', models.IntegerField(blank=True, null=True)),
                ('message', models.CharField(blank=True, max_length=4000, null=True)),
                ('message_read', models.CharField(blank=True, max_length=1, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('member_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='messageinfos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='MemberGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(blank=True, max_length=500, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('center_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='membergroups', to='WebApp.CenterInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='LessonLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_id', models.CharField(blank=True, max_length=250, null=True)),
                ('member_ip', models.CharField(blank=True, max_length=500, null=True)),
                ('member_browser', models.CharField(blank=True, max_length=150, null=True)),
                ('member_os', models.CharField(blank=True, max_length=150, null=True)),
                ('start_date', models.CharField(blank=True, max_length=50, null=True)),
                ('start_time', models.CharField(blank=True, max_length=50, null=True)),
                ('end_date', models.CharField(blank=True, max_length=150, null=True)),
                ('end_time', models.CharField(blank=True, max_length=150, null=True)),
                ('connect_date', models.CharField(blank=True, max_length=50, null=True)),
                ('connect_time', models.CharField(blank=True, max_length=50, null=True)),
                ('connect_count', models.IntegerField(blank=True, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('study_time', models.IntegerField(blank=True, null=True)),
                ('connect_page', models.IntegerField(blank=True, null=True)),
                ('chapter_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lessonlogs', to='WebApp.ChapterInfo')),
                ('lecture_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lessonlogs', to='WebApp.LectureInfo')),
                ('lesson_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lessonlogs', to='WebApp.LessonInfo')),
                ('member_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lessonlogs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.AddField(
            model_name='lessoninfo',
            name='member_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lessoninfos', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='LectureUbtInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('lecture_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lectureubtinfos', to='WebApp.LectureInfo')),
                ('quiz_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lectureubtinfos', to='WebApp.QuizInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.AddField(
            model_name='lectureinfo',
            name='Teacher_Code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lectureinfos', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='LearningNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contents_code', models.IntegerField()),
                ('note_contents', models.TextField(blank=True, null=True)),
                ('note_attachment', models.CharField(blank=True, max_length=250, null=True)),
                ('chapter_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='learningnotes', to='WebApp.ChapterInfo')),
                ('inning_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='learningnotes', to='WebApp.InningInfo')),
                ('lecture_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='learningnotes', to='WebApp.LectureInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='InningGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('Inning_Code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='inninggroups', to='WebApp.InningInfo')),
                ('Lecture_Code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='inninggroups', to='WebApp.LectureInfo')),
                ('Teacher_Code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='GroupMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('Inning_Code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='WebApp.InningGroup')),
                ('Student_Code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='ChapterWrite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_code', models.IntegerField(blank=True, null=True)),
                ('write_content', models.TextField(blank=True, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('chapter_contents_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='chapterwrites', to='WebApp.ChapterContentsInfo')),
                ('inning_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='chapterwrites', to='WebApp.InningInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='ChapterMissonCheckItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_item_code', models.IntegerField(unique=True)),
                ('item_text', models.TextField(blank=True, null=True)),
                ('contents_text', models.TextField(blank=True, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('chapter_contents_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='chaptermissoncheckitems', to='WebApp.ChapterContentsInfo')),
                ('check_card_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='chaptermissoncheckitems', to='WebApp.ChapterMissonCheckCard')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='ChapterMissonCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_code', models.IntegerField(unique=True)),
                ('student_code', models.IntegerField()),
                ('check_agent_code', models.IntegerField()),
                ('is_check_yn', models.CharField(max_length=1)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('check_item_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='chaptermissonchecks', to='WebApp.ChapterMissonCheckItem')),
                ('inning_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='chaptermissonchecks', to='WebApp.InningInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.AddField(
            model_name='chapterinfo',
            name='Lecture_Code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='chapterinfos', to='WebApp.LectureInfo'),
        ),
        migrations.CreateModel(
            name='ChapterImgInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, max_length=150, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('chapter_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='chapterimginfos', to='WebApp.ChapterInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.AddField(
            model_name='chaptercontentsinfo',
            name='Chapter_Code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='chaptercontentsinfos', to='WebApp.ChapterInfo'),
        ),
        migrations.CreateModel(
            name='ChapterContentMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(max_length=10)),
                ('media_desc', models.TextField(blank=True, null=True)),
                ('media_filename', models.CharField(max_length=255)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('chapter_contents_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='chaptercontentmedias', to='WebApp.ChapterContentsInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='BoardContentInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_id', models.CharField(blank=True, max_length=200, null=True)),
                ('title', models.CharField(blank=True, max_length=5000, null=True)),
                ('contents', models.CharField(blank=True, max_length=5000, null=True)),
                ('writer', models.CharField(blank=True, max_length=200, null=True)),
                ('view_cnt', models.IntegerField(blank=True, null=True)),
                ('ref_code', models.IntegerField(blank=True, null=True)),
                ('ref_step', models.CharField(blank=True, max_length=16, null=True)),
                ('ref_level', models.IntegerField(blank=True, null=True)),
                ('write_time', models.CharField(blank=True, max_length=18, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('board_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='boardcontentinfos', to='WebApp.BoardInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='AssignQuestionInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_code', models.IntegerField(blank=True, null=True)),
                ('question_type', models.CharField(blank=True, max_length=20, null=True)),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('chapter_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='assignquestioninfos', to='WebApp.ChapterInfo')),
                ('lecture_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='assignquestioninfos', to='WebApp.LectureInfo')),
                ('question_code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='assignquestioninfos', to='WebApp.OmrQuestionInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='AssignHomeworkInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Use_Flag', models.BooleanField(default=True)),
                ('Register_DateTime', models.DateTimeField(auto_now_add=True)),
                ('Updated_DateTime', models.DateTimeField(auto_now=True)),
                ('Register_Agent', models.CharField(blank=True, max_length=500, null=True)),
                ('Homework_Code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='assignhomeworkinfos', to='WebApp.HomeworkInfo')),
                ('Inning_Code', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='assignhomeworkinfos', to='WebApp.InningInfo')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
    ]
